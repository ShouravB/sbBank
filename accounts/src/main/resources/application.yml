server:
  port: 8085
#  servlet:
#    context-path: "/accounts"

spring:
  application:
    name: "accounts"

  datasource:
    url: jdbc:mysql://localhost:3306/accountsdb
    username: root
    password: root
  sql:
    init:
      mode: always

  jpa:
    show-sql: true
    #hibernate.ddl-auto: update
  cloud:
    openfeign:
      circuitbreaker:
        enabled: true

    function:
      definition: updateCommunication

    stream:
      bindings:
        updateCommunication-in-0:
          destination: email-sms-sent
          group: ${spring.application.name}
        sendEmailSms-out-0:
          destination: send-email-sms
      kafka:
        binder:
          brokers: localhost
          defaultBrokerPort: 9092
          healthTimeout: 30
          autoCreateTopics: true

#  rabbitmq:
#    host: localhost
#    port: 5672
#    username: guest
#    password: guest
#    connection-timeout: 10s


  config:
    import: "optional:configserver:http://localhost:8071/"

eureka:
  instance:
    preferIpAddress: true
  client:
    fetchRegistry: true
    registerWithEureka: true
    serviceUrl:
      defaultZone: http://localhost:8070/eureka/

management:
  endpoints:
    web:
      exposure:
        include: "*"
  health:
    readiness-state:
      enabled: true
    liveness-state:
      enabled: true
  endpoint:
    shutdown:
      enabled: true
    health:
      probes:
        enabled: true
  metrics:
    tags:
      application: ${spring.application.name}
  info:
    env:
      enabled: true

endpoints:
  shutdown:
    enabled: true

logging:
  level:
    com:
      sbbank:
        accounts: DEBUG
  pattern:
    level: "%5p [${spring.application.name},%X{trace_id},%X{span_id}]"


info:
  app:
    name : "Accounts"
    description: "sbBank account microservice instance"
    version: "1.0.0"

resilience4j.circuitbreaker:
  configs:
    default:
      slidingWindowSize: 10
      permittedNumberOfCallsInHalfOpenState: 2
      failureRateThreshold: 50
      waitDurationInOpenState: 10000



